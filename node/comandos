//crear proyecto node
npm init

//crear proyecto node rapido
npm init -y

//editar configuracion base
npm set init.author.email "correo"
npm set init.author.name "tu nombre"
npm set init.license “MIT”

//crea proyecto rapido con la configuracion base
npm init -y

//instalar paquete en produccion
npm install moment --save
npm i moment -S

//instalar paquete en desarrollo
npm install moment --save-dev
npm i date-fns -D

//instalar paquete de forma global
npm install -g nodemon

//buscar todos los paquetes instalados de forma global
npm list -g --depth 0

//buscar todos los paquetes instalados
npm list

//instalar paquetes opcionales
npm install eslint -O

//instalar paquete y registrar la version exacta
npm i -D -E moment

//Cuando queremos ver el output de una dependencia sin proceder con su instalación ejecutamos
npm install name_package --dry-run

//Instalar la última versión y desde los servidores de npm
npm install webpack -f
npm install webpack --force

//Instalar una versión exacta de un paquete:
npm install json-server@0.15.0

//Revisar que paquetes disponen de nuevas versiones
npm outdate

//Para ver un output más detallado
npm outdate --dd

//Actualizar los paquetes que no están en la ultima versión
npm update

//Actualizar los paquetes que no están en la ultima versión junto con sus dependencias

npm update paquete --depth 2

//Actualizar un paquete especifico
npm install json-server@latest

//Eliminar un paquete de node_modules y del archivo package.json
npm uninstall json-server

//Desinstalar un paquete de todo node_modules pero no del archivo package.json
npm uninstall webpack --no-save

//activar la opción de verbose
npm run [comando] --dd
npm run build --dd

//borrar cache del sistema
npm cache clear --force

//Para verificar que verdaderamente se borro podemos usar
npm cache verify

//eliminar la carpeta node modules
rm -rf node_modules

//Otra alternativa para eliminar de forma segura una carpeta es instalando el siguiente paquete
npm install -g rimraf

//eliminar la carpeta node modules con otra opcion
rimraf node_modules 

//Podemos revisar las vulnerabilidades de nuestro proyecto
npm audit
npm audit --json
npm audit --json  > auditoria.txt

//En caso de tener vulverabilidades, se recomienda usar el comando
npm audit fix

//instalar paquete creado localmente (dos opciones)
sudo npm link
npm install -g ruta_proyecto

//publicar paquetes en npm
npm adduser
npm publish

//comandos para subir la version del proyecto segun tipos de cambio
Cambio mayor=> npm version major
Cambio menor=> npm version minor
Parche a nuestro paquete=> npm version patch


